service: sfc-ondemand-reports

custom:
  environment: ${opt:stage, 'development'}
  bucketName: "${self:custom.environment}-thisbucket"
  region: ${opt:region, 'eu-west-1'}
  EMAIL_SENDER:
    dev: warren.ayling@wozitech-ltd.co.uk
    staging: warren.ayling@wozitech-ltd.co.uk
    preprod: warren.ayling@wozitech-ltd.co.uk
    prod: warren.ayling@wozitech-ltd.co.uk
  EMAIL_RECIPIENT:
    dev: warren.ayling@wozitech-ltd.co.uk
    staging: warren.ayling@wozitech-ltd.co.uk
    preprod: warren.ayling@wozitech-ltd.co.uk
    prod: warren.ayling@wozitech-ltd.co.uk
  STORE:
    dev: "dev/ondemand/reporting"
    staging: "staging/ondemand/reporting"
    preprod: "preprod/ondemand/reporting"
    prod: "prod/ondemand/reporting"
  SFC_HOST:
    dev: "sfcdev.cloudapps.digital"
    staging: "sfcstaging.cloudapps.digital"
    preprod: "sfcuat.cloudapps.digital"
    prod: "asc-wds.skillsforcare.org.uk"

provider:
  name: aws
  runtime: nodejs8.10
  profile: serverless-admin
  region: ${self:custom.region}
  endpointType: REGIONAL
  stage: ${opt:stage, 'development'}
  timeout: 15
  memorySize: 128
  environment:
    LOG_LEVEL: 1      # 0-disabled; 1-errors, 2-warnings, 3-info, 4-debug, 5-trace
    SLACK_LEVEL: 1          # 0-disabled; 1-errors, 2-warnings, 3-info, 4-debug, 5-trace
    STORE: "${self:custom.STORE.${self:provider.stage}}"
  role: "arn:aws:iam::#{AWS::AccountId}:role/sfc-${self:provider.stage}-lambda"

package:
  individually: true
  excludeDevDependencies: false
  exclude:
    - '**/*'
    - .git/**

functions:
  snapshotReport:
    handler: snapshotReport.handler
    memorySize: 512
    timeout: 15
    environment:
      SFC_HOST: "${self:custom.SFC_HOST.${self:provider.stage}}"
      LOG_LEVEL: 3      # 0-disabled; 1-errors, 2-warnings, 3-info, 4-debug, 5-trace
      EMAIL_SENDER: "${self:custom.EMAIL_SENDER.${self:provider.stage}}"
      EMAIL_RECIPIENT: "${self:custom.EMAIL_RECIPIENT.${self:provider.stage}}"
    tags:
      application: "Reporting"
      function: "On Demand Reporting"
      company: "SfC"
    package:
      include:
        - snapshotReport.js
  establishmentsIngest:
    handler: ingestEstablishments.handler
    memorySize: 128
    timeout: 30
    environment:
      STREAM: 'establishments.dev'
      LOG_LEVEL: 3      # 0-disabled; 1-errors, 2-warnings, 3-info, 4-debug, 5-trace
      #MONGO_DB_URI: ${env:MONGO_DB_URI}
    events:
      - stream:
          type: kinesis
          arn:  arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/establishments.dev
          batchSize: 100
          startingPosition: LATEST
    tags:
      application: "Pump"
      function: "On Demand Reporting"
      company: "SfC"
    package:
      include:
        - ingestEstablishments.js
plugins:
  - serverless-pseudo-parameters
  - serverless-plugin-include-dependencies